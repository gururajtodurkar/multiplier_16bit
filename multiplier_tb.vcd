$date
	Fri Aug 25 21:32:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module multiplier_tb $end
$var wire 1 ! ldp $end
$var wire 1 " ldb $end
$var wire 1 # lda $end
$var wire 1 $ eqz $end
$var wire 1 % done $end
$var wire 1 & decb $end
$var wire 1 ' clrp $end
$var reg 1 ( clk $end
$var reg 16 ) data_in [15:0] $end
$var reg 1 * start $end
$scope module m1 $end
$var wire 16 + bus [15:0] $end
$var wire 1 ( clk $end
$var wire 16 , z [15:0] $end
$var wire 16 - y [15:0] $end
$var wire 16 . x [15:0] $end
$var wire 1 ! ldp $end
$var wire 1 " ldb $end
$var wire 1 # lda $end
$var wire 1 $ eqz $end
$var wire 1 & decb $end
$var wire 16 / co [15:0] $end
$var wire 1 ' clrp $end
$scope module a1 $end
$var wire 16 0 out [15:0] $end
$var wire 16 1 b [15:0] $end
$var wire 16 2 a [15:0] $end
$upscope $end
$scope module c1 $end
$var wire 1 $ out $end
$var wire 16 3 in [15:0] $end
$upscope $end
$scope module rega $end
$var wire 1 ( clk $end
$var wire 16 4 in [15:0] $end
$var wire 1 # ld $end
$var reg 16 5 out [15:0] $end
$upscope $end
$scope module regb $end
$var wire 1 ( clk $end
$var wire 16 6 in [15:0] $end
$var wire 1 " ld $end
$var wire 1 & dec $end
$var reg 16 7 out [15:0] $end
$upscope $end
$scope module regp $end
$var wire 1 ( clk $end
$var wire 16 8 in [15:0] $end
$var wire 1 ! ld $end
$var wire 1 ' clr $end
$var reg 16 9 out [15:0] $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 ( clk $end
$var wire 1 $ eqz $end
$var wire 1 * start $end
$var parameter 3 : s0 $end
$var parameter 3 ; s1 $end
$var parameter 3 < s2 $end
$var parameter 3 = s3 $end
$var parameter 3 > s4 $end
$var reg 1 ' clrp $end
$var reg 1 & decb $end
$var reg 1 % done $end
$var reg 1 # lda $end
$var reg 1 " ldb $end
$var reg 1 ! ldp $end
$var reg 3 ? state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 >
b11 =
b10 <
b1 ;
b0 :
$end
#0
$dumpvars
bx ?
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
bx )
0(
x'
x&
x%
x$
x#
x"
x!
$end
#3
1*
#5
b0 ?
1(
#6
0&
0'
0!
0"
0#
#10
0(
#15
b1 ?
1(
#16
1#
#17
b10001 )
b10001 +
b10001 4
b10001 6
#20
0(
#25
b10001 .
b10001 2
b10001 5
b10 ?
1(
#26
1'
1"
0#
#27
b101 )
b101 +
b101 4
b101 6
#30
0(
#35
b11 ?
0$
b101 /
b101 3
b101 7
b10001 ,
b10001 0
b10001 8
b0 -
b0 1
b0 9
1(
#36
1!
1&
0'
0"
#40
0(
#45
b100010 ,
b100010 0
b100010 8
b10001 -
b10001 1
b10001 9
b100 /
b100 3
b100 7
1(
#50
0(
#55
b11 /
b11 3
b11 7
b110011 ,
b110011 0
b110011 8
b100010 -
b100010 1
b100010 9
1(
#60
0(
#65
b1000100 ,
b1000100 0
b1000100 8
b110011 -
b110011 1
b110011 9
b10 /
b10 3
b10 7
1(
#70
0(
#75
b1 /
b1 3
b1 7
b1010101 ,
b1010101 0
b1010101 8
b1000100 -
b1000100 1
b1000100 9
1(
#80
0(
#85
b1100110 ,
b1100110 0
b1100110 8
b1010101 -
b1010101 1
b1010101 9
1$
b0 /
b0 3
b0 7
1(
#87
b100 ?
#88
0&
0!
1%
#90
0(
#95
1(
#100
0(
#103
